package com.sandeepbegudem.customer.payments.service.entity;import jakarta.persistence.*;import jakarta.validation.constraints.Max;import jakarta.validation.constraints.Min;import jakarta.validation.constraints.NotNull;import jakarta.validation.constraints.Size;import lombok.*;import java.util.List;@Setter@Getter@Entitypublic class Customer {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Integer id;    @Size(min = 3, max = 20, message = "firstname must be between 3 and 20 characters")    @NotNull(message = "firstname cannot be null")    private String firstname;    @Size(min = 3, max = 20, message = "lastname must be between 3 and 20 characters")    @NotNull(message = "lastname cannot be null")    private String lastname;    @Min(value = 18, message = "Age should not be less than 18")    @Max(value = 100, message = "Age should not be greater than 100")    @NotNull(message = "age cannot be null")    private int age;    @Size(min = 10, max = 50, message = "address must be between 10 and 50 characters")    @NotNull(message = "address cannot be null")    private String address;    @Size(min = 3, max = 50, message = "state must be between 3 and 30 characters")    @NotNull(message = "city cannot be null")    private String city;    @Size(min = 2, max = 12, message = "state must be between 2 and 13 characters")    @NotNull(message = "state cannot be null")    private String state;    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)    @JoinColumn(name = "customer_payments_fk")    private List<Payment> payments;    public Customer() {    }    public Customer(Integer id, String firstname, String lastname, int age, String address, String city, String state, List<Payment> payments) {        this.id = id;        this.firstname = firstname;        this.lastname = lastname;        this.age = age;        this.address = address;        this.city = city;        this.state = state;        this.payments = payments;    }}