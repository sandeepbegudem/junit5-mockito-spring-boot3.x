package com.sandeepbegudem.customer.payments.service.service;import com.sandeepbegudem.customer.payments.service.dto.PaymentDto;import com.sandeepbegudem.customer.payments.service.entity.Payment;import com.sandeepbegudem.customer.payments.service.mapper.PaymentMapper;import com.sandeepbegudem.customer.payments.service.repository.PaymentsRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;@Servicepublic class PaymentService {    @Autowired    private PaymentMapper mapper;    @Autowired    private PaymentsRepository repository;    public Payment savePayment(PaymentDto paymentDto){       Payment payment = mapper.dtoToEntity(paymentDto);       Payment savedPayment = repository.save(payment);       return savedPayment;    }    public List<PaymentDto> getAllPayments(){        List<PaymentDto> paymentDto = repository.paymentsList();        return paymentDto;    }    public Payment updatePayment(PaymentDto paymentDto, int id) {        Payment payment = repository.findById(id).orElse(null);        Payment savedPayment;        if (payment == null) throw new RuntimeException("payment : " + payment.getPaymentId() + " not found");        else {            savedPayment = repository.save(payment);            return savedPayment;        }    }    public Optional<PaymentDto> getPaymentById(int id){        Optional<PaymentDto> paymentDto = repository.paymentDetailsById(id);        return paymentDto;    }}