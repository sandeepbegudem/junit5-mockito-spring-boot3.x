package com.sandeepbegudem.customer.payments.service.mapper;import org.junit.jupiter.api.*;class CustomerMapperTestDemo {    // beforeAll method will execute only once per execution before the execution of the setUp or BeforeEach method    @BeforeAll    static void beforeAll() {        System.out.println("Inside the before all method");    }    // afterAll method excutes after the execution of all of the methods, and executes    // for only once    @AfterAll    static void afterAll() {        System.out.println("Inside the afterAll method");    }    // setUp method will be executed before each of the Test methods, and they are useful to    // initialize parameters or anything before running the actual Test method annotated with @Test    @BeforeEach    void setUp() {        System.out.println("Inside the before each method");    }    // tearDown method will execute after the execution of the Test method, it is useful to delete    // any variables what was generated after the execution of the setUp method.    @AfterEach    void tearDown() {        System.out.println("Inside tear down method!");    }    @Test    public void testMehtod1(){        System.out.println("Bonjour!, from testMethod1");    }    @Test    public void testMehtod2(){        System.out.println("Bonjour!, from testMethod2");    }    @Test    @Disabled // Disabled annotation is used to disable any method for execution    public void testMehtod3(){        System.out.println("Bonjour!, from testMethod3");    }}